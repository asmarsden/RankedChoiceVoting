{"version":3,"sources":["./src/app/log.service.ts","./src/app/components/add-ballot/add-ballot.component.ts","./src/app/components/add-ballot/add-ballot.component.html","./src/environments/environment.ts","./src/app/models/ballot.model.ts","./src/app/services/poll.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/view-poll/view-poll.component.ts","./src/app/components/view-poll/view-poll.component.html","./src/app/services/ballot.service.ts","./src/app/app-routing.module.ts","./src/app/models/poll.model.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n@Injectable()\r\n\r\nexport class LogService {\r\n    log(msg: any) {\r\n        console.log(new Date() + \": \" + JSON.stringify(msg));\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { concat } from 'rxjs';\nimport { Ballot } from 'src/app/models/ballot.model';\nimport { Poll } from 'src/app/models/poll.model';\nimport { PollService } from 'src/app/services/poll.service';\nimport { BallotService } from 'src/app/services/ballot.service';\nimport { LogService } from 'src/app/log.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-add-ballot',\n  templateUrl: './add-ballot.component.html',\n  styleUrls: ['./add-ballot.component.css']\n})\nexport class AddBallotComponent implements OnInit {\n  pollData  = new Poll();\n  data: any;\n  voterName: any;\n  pollCode: string = '';\n  bal = new Ballot();\n  ballot: any;\n\n  constructor(private http: HttpClient, private pollService: PollService, private route: ActivatedRoute, private router: Router, private logger: LogService, private ballotService: BallotService) { }\n\n  ngOnInit(): void {\n    this.data = this.getPollData();\n  }\n\n  onSubmit(form : NgForm){  \n    var choices = [];\n    for (const field in form.controls) { //this for loop grabs all the choices chosen and plops em in an array\n      if (field.substr(0,6) == 'Choice'){\n        var value = form.controls[field].value;\n\n        if (value != '')\n          choices.push(form.controls[field].value);\n      }  \n    }\n\n    this.ballot = {\"parentPollCode\": this.pollCode, \"name\": this.voterName, \"ranking\": choices};\n\n    let balsub = this.ballotService.create(this.ballot, this.pollCode).subscribe(\n      (response)=>{\n        this.logger.log(response);\n       }); \n  }\n\n  getPollData(){\n    let testing = this.pollService.get(this.pollCode).subscribe(\n      (test)=>{\n        this.pollData.adminCode = test.adminCode;\n        this.pollData.question = test.question;\n        this.pollData.urlCode = test.urlCode;\n        this.pollData.candidates = test.candidates;\n       }); \n  }\n\n}\n","<style>\n  .content {\n    max-width: 500px;\n    margin: auto;\n  }\n  </style>\n  <body>\n  \n  <div class=\"content\">\n  \n  <div>\n    <input type=\"text\" id=\"pollCode\" [(ngModel)]=\"pollCode\">\n    <button (click)=\"getPollData()\" type=\"button\" name=\"button\">Get Poll Data</button>\n  </div>\n\n  <br/>\n\n  <div *ngIf=\"pollData\">\n    <span>URL Code:  {{ pollData.urlCode }}</span>\n    <br/>\n    <span>Question:  {{ pollData.question }}</span>\n    <br/>\n    <form #ballotForm=\"ngForm\" (ngSubmit)=\"onSubmit(ballotForm)\">\n        <div *ngFor=\"let candidate of pollData.candidates; index as i\">\n            <label>Choice {{i+1}}:</label>\n            <select name=\"Choice{{i+1}}\"  ngModel>\n                <option *ngFor=\"let candidate of pollData.candidates; let j = index\" [value]=\"j\">\n                    {{candidate}}\n                  </option>\n            </select>\n        </div>\n        <p>\n            <label>Enter Name:</label>\n            <input type=\"text\" name=\"voterName\" id=\"voterName\" [(ngModel)]=\"voterName\" ngModel>\n        </p>\n        <p>\n            <button type=\"submit\">Submit Vote</button>\n        </p> \n    </form>\n  </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export class Ballot {\r\n  ballotId?: string;\r\n  name?: string;\r\n  ranking?: Array<number>;\r\n  parentPollCode?: string;\r\n  ballotCode?: string;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Poll } from '../models/poll.model';\r\nimport { Ballot } from '../models/ballot.model';\r\n\r\nconst baseUrl = 'http://localhost:8080/api/poll';\r\n//will need to change this baseUrl once it's ready for prod. also not even sure if this is the right url. it Should be\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PollService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  get(id: any): Observable<Poll> { //this will just return a whole poll, then i can do like poll.whatever to get the details\r\n    return this.http.get(`${baseUrl}/${id}`);\r\n  }\r\n\r\n  update(id: any, data: any): Observable<any> { //this is gonna be needed in order to update a poll w new ballots\r\n    return this.http.put(`${baseUrl}/${id}`, data);\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent  {\n  title : string = \"\";\n  name : string = \"\";\n  fakeData : any;\n  pollData : any;\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.title = \"Ranked Choice Voting\";\n    // this.fakeData = this.getData();\n    // console.log(this.fakeData);\n  }\n\n  doSomething() {\n    alert(this.name)\n  }\n\n  getPollData(){\n    this.pollData = this.fetchData();\n    //console.log(this.pollData);\n  }\n\n  fetchData(){\n    //call service\n    return {\n      \"adminCode\" : \"12345678\",\n      \"urlCode\" : \"87654321\",\n      \"question\" : \"What are the best things to do\",\n      \"requireName\" : \"false\",\n      \"password\" : \"\",\n      \"candidates\" : [\n          \"Eat Apple\",\n          \"Eat Banana\",\n          \"Drink Beer\"\n      ],\n      \"ballots\" : [] as string[]\n    }\n  }\n}\n","<div>\n    <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n      <a href=\"#\" class=\"navbar-brand\">Ranked Choice Voting</a>\n      <div class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\">\n          <a routerLink=\"/view-poll\" class=\"nav-link\">View Poll Results</a>\n        </li>\n        <li class=\"nav-item\">\n          <a routerLink=\"/add-ballot\" class=\"nav-link\">Vote on a Poll</a>\n        </li>\n      </div>\n    </nav>\n    <div class=\"container mt-3\">\n      <router-outlet></router-outlet>\n    </div>\n    <! --- here is where info for the homepage will be, but we dont really have anything for a homepage. it just looks too bare right now so later ill worry about it --->\n  </div>\n\n\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { ViewPollComponent } from 'src/app/components/view-poll/view-poll.component';\nimport { AddBallotComponent } from 'src/app/components/add-ballot/add-ballot.component';\nimport { LogService } from 'src/app/log.service';\nimport { BallotService } from './services/ballot.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ViewPollComponent,\n    AddBallotComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [LogService, BallotService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Poll } from 'src/app/models/poll.model';\nimport { Ballot } from 'src/app/models/ballot.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PollService } from 'src/app/services/poll.service';\nimport { BallotService } from 'src/app/services/ballot.service';\nimport { LogService } from 'src/app/log.service';\n\n@Component({\n  selector: 'app-view-poll',\n  templateUrl: './view-poll.component.html',\n  styleUrls: ['./view-poll.component.css']\n})\nexport class ViewPollComponent implements OnInit {\n\n  pollData  = new Poll();\n  pollCode: string = '';\n  bal = new Ballot();\n\n  constructor(private http: HttpClient, private pollService: PollService, private route: ActivatedRoute, private router: Router, private logger: LogService, private ballotService: BallotService) {\n  }\n\n  ngOnInit() {\n    //this.pollCode = this.route.snapshot.params.id;\n    //this.getPollData(); //i Think this is supposed to route stuff through the html? im not sure.\n  }\n\n  getPollData(){\n\n    this.logger.log(\"Test\");\n    let testing = this.pollService.get(this.pollCode).subscribe(\n      (test)=>{\n   \n        this.logger.log(test);\n        this.pollData.adminCode = test.adminCode;\n        this.pollData.question = test.question;\n        this.pollData.urlCode = test.urlCode;\n        this.logger.log(this.pollData.urlCode);\n        this.pollData.candidates = test.candidates;\n        this.logger.log(this.pollData.candidates);\n       }); \n\n  }\n\n}\n","<div>\n    <input type=\"text\" id=\"pollCode\" [(ngModel)]=\"pollCode\">\n    <button (click)=\"getPollData()\" type=\"button\" name=\"button\">Get Poll Data</button>\n  </div>\n  \n  <div *ngIf=\"pollData\">\n    <br/>\n    <span>URL Code:  {{ pollData.urlCode }}</span>\n    <br/>\n    <span>Question:  {{ pollData.question }}</span>\n    <br/>\n    Candidates:\n    <br/>\n    <ul *ngFor=\"let candidate of pollData.candidates; index as i\">\n      <li>Candidate {{i+1}}:  {{candidate}}</li>\n    </ul>\n  </div>\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Ballot } from '../models/ballot.model';\r\nimport { LogService } from 'src/app/log.service';\r\n\r\n\r\nconst baseUrl = 'http://localhost:8080/api/poll';\r\n//this baseUrl will have to change once this is ready for production\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BallotService {\r\n\r\n  constructor(private http: HttpClient, private logger: LogService) { }\r\n\r\n  create(ballot: any, id: any): Observable<any> {\r\n    return this.http.post(`${baseUrl}/${id}/vote`, ballot); \r\n  }\r\n\r\n  update(id: any, data: any): Observable<any> {\r\n    return this.http.put(`${baseUrl}/${id}`, data);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddBallotComponent } from 'src/app/components/add-ballot/add-ballot.component';\nimport { ViewPollComponent } from 'src/app/components/view-poll/view-poll.component';\n\nconst routes: Routes = [\n  { path: 'add-ballot', component: AddBallotComponent },\n  { path: 'view-poll', component: ViewPollComponent }\n  //might need a path for homepage but im not worried abt that right now \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export class Poll {\r\n  adminCode?: number;\r\n  urlCode?: number;\r\n  question?: string;\r\n  askedBy?: string;\r\n  candidates?: Array<string>;\r\n  multipleAnswer?: boolean;\r\n  createdAt?: string;\r\n  requireName?: boolean;\r\n  password?: string;\r\n  published?: boolean;\r\n  ballots?: Array<string>;\r\n  winner?: string; //idk if this is defined in the data at the level of springboot but it should be, makes it easier to display, well, the winner\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}