{"version":3,"sources":["./src/app/log.service.ts","./src/app/components/add-ballot/add-ballot.component.ts","./src/app/components/add-ballot/add-ballot.component.html","./src/environments/environment.ts","./src/app/models/ballot.model.ts","./src/app/services/poll.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/view-poll/view-poll.component.ts","./src/app/components/view-poll/view-poll.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\r\n@Injectable()\r\n\r\nexport class LogService {\r\n    log(msg: any) {\r\n        console.log(new Date() + \": \" + JSON.stringify(msg));\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { concat } from 'rxjs';\nimport { Ballot } from 'src/app/models/ballot.model';\n\n\n@Component({\n  selector: 'app-add-ballot',\n  templateUrl: './add-ballot.component.html',\n  styleUrls: ['./add-ballot.component.css']\n})\nexport class AddBallotComponent implements OnInit {\n  pollData : any;\n  ballot = new Ballot();\n\n  constructor() { }\n\n  ngOnInit(): void {\n    //grab poll code from url and fetch poll data\n    this.pollData = this.fetchData();\n  }\n\n  onSubmit(form : NgForm){  \n    //console.log(form.value);  \n    \n    var choices = [];\n\n    for (const field in form.controls) { // 'field' is a string\n      //console.log(form.controls[field].value);\n      \n      \n      if (field.substr(0,6) == 'Choice'){\n        var value = form.controls[field].value;\n\n        if (value != '')\n          choices.push(form.controls[field].value);\n      }  \n    }\n    // console.log(choices);\n    // console.log(choices.length);\n\n    var ballot = {\"parentPollCode\": \"abc\", \"name\": \"Chris\", \"ranking\": choices};\n\n    console.log(ballot);\n  }\n\n  getPollData(){\n    \n    //console.log(this.pollData);\n  }\n\n  fetchData(){\n    //call service\n    return {\n      \"adminCode\" : \"12345678\",\n      \"urlCode\" : \"87654321\",\n      \"question\" : \"What are the best things to do\",\n      \"requireName\" : \"false\",\n      \"password\" : \"\",\n      \"candidates\" : [\n          \"Eat Apple\",\n          \"Eat Banana\",\n          \"Drink Beer\",\n          \"Go Hiking\",\n          \"Ride a bike\"\n      ],\n      \"ballots\" : [] as string[]\n    }\n  }\n\n}\n","<!-- \n<div>\n    <label for=\"pollCode\">Enter Poll Code:</label>\n    <input type=\"text\" id=\"pollCode\">\n    <button (click)=\"getPollData()\" type=\"button\" name=\"button\">Get Poll Data</button>\n  </div>\n\n  <br/> -->\n\n  <div *ngIf=\"pollData\">\n    <span>URL Code:  {{ pollData.urlCode }}</span>\n    <br/>\n    <span>Question:  {{ pollData.question }}</span>\n    <br/>\n    <form #ballotForm=\"ngForm\" (ngSubmit)=\"onSubmit(ballotForm)\">\n        <div *ngFor=\"let candidate of pollData.candidates; index as i\">\n            <label>Choice {{i+1}}:</label>\n            <select name=\"Choice{{i+1}}\"  ngModel>\n                <option *ngFor=\"let candidate of pollData.candidates; let j = index\" [value]=\"j\">\n                    {{candidate}}\n                  </option>\n            </select>\n        </div>\n\n\n        <!-- <p>\n            <label>First Choice:</label>\n            <select name=\"choice1\" ngModel>\n                <option *ngFor=\"let candidate of pollData.candidates\">\n                    {{candidate}}\n                  </option>\n            </select>\n        </p>\n        <p>\n            <label>Second Choice:</label>\n            <select name=\"choice2\" ngModel>\n                <option *ngFor=\"let candidate of pollData.candidates\">\n                    {{candidate}}\n                  </option>\n            </select>\n        </p>\n        <p>\n            <label>Third Choice:</label>\n            <select name=\"choice3\" ngModel>\n                <option *ngFor=\"let candidate of pollData.candidates\">\n                    {{candidate}}\n                  </option>\n            </select>\n        </p>-->\n        <p>\n            <label>Enter Name:</label>\n            <input type=\"text\" name=\"voterName\" id=\"voterName\" ngModel>\n        </p>\n        <p>\n            <button type=\"submit\">Submit Vote</button>\n        </p> \n    </form>\n  </div>\n\n\n<!-- <form (ngSubmit)=\"onSubmit()\" #heroForm=\"ngForm\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"name\"\n             required\n             [(ngModel)]=\"model.name\" name=\"name\"\n             #name=\"ngModel\">\n      <div [hidden]=\"name.valid || name.pristine\"\n           class=\"alert alert-danger\">\n        Name is required\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"alterEgo\">Alter Ego</label>\n      <input type=\"text\" class=\"form-control\" id=\"alterEgo\"\n             [(ngModel)]=\"model.alterEgo\" name=\"alterEgo\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"power\">Hero Power</label>\n      <select class=\"form-control\" id=\"power\"\n              required\n              [(ngModel)]=\"model.power\" name=\"power\"\n              #power=\"ngModel\">\n        <option *ngFor=\"let pow of powers\" [value]=\"pow\">{{pow}}</option>\n      </select>\n      <div [hidden]=\"power.valid || power.pristine\" class=\"alert alert-danger\">\n        Power is required\n      </div>\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!heroForm.form.valid\">Submit</button>\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"newHero(); heroForm.reset()\">New Hero</button>\n    <i>with</i> reset\n\n    &nbsp;&nbsp;\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"newHero()\">New Hero</button>\n    <i>without</i> reset\n\n    <div>\n      <hr>\n      Name via form.controls = {{showFormControls(heroForm)}}\n    </div>\n\n  </form> -->","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export class Ballot {\r\n  ballotId?: string;\r\n  name?: string;\r\n  ranking?: Array<number>;\r\n  parentPollCode?: string;\r\n  ballotCode?: string;\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Poll } from '../models/poll.model';\r\nimport { Ballot } from '../models/ballot.model';\r\n\r\nconst baseUrl = 'http://localhost:8080/api/poll';\r\n//will need to change this baseUrl once it's ready for prod. also not even sure if this is the right url. it Should be\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PollService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  get(id: any): Observable<Poll> { //this will just return a whole poll, then i can do like poll.whatever to get the details\r\n    return this.http.get(`${baseUrl}/${id}`);\r\n  }\r\n\r\n  update(id: any, data: any): Observable<any> { //this is gonna be needed in order to update a poll w new ballots\r\n    return this.http.put(`${baseUrl}/${id}`, data);\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent  {\n  title : string = \"\";\n  name : string = \"\";\n  fakeData : any;\n  pollData : any;\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n    this.title = \"Ranked Choice Voting\";\n    // this.fakeData = this.getData();\n    // console.log(this.fakeData);\n  }\n\n  doSomething() {\n    alert(this.name)\n  }\n\n  getPollData(){\n    this.pollData = this.fetchData();\n    //console.log(this.pollData);\n  }\n\n  fetchData(){\n    //call service\n    return {\n      \"adminCode\" : \"12345678\",\n      \"urlCode\" : \"87654321\",\n      \"question\" : \"What are the best things to do\",\n      \"requireName\" : \"false\",\n      \"password\" : \"\",\n      \"candidates\" : [\n          \"Eat Apple\",\n          \"Eat Banana\",\n          \"Drink Beer\"\n      ],\n      \"ballots\" : [] as string[]\n    }\n  }\n}\n","<div>\n    <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n      <a href=\"#\" class=\"navbar-brand\">Ranked Choice Voting</a>\n      <div class=\"navbar-nav mr-auto\">\n        <li class=\"nav-item\">\n          <a routerLink=\"/view-poll\" class=\"nav-link\">View Poll Results</a>\n        </li>\n        <li class=\"nav-item\">\n          <a routerLink=\"/add-ballot\" class=\"nav-link\">Vote on a Poll</a>\n        </li>\n      </div>\n    </nav>\n    <div class=\"container mt-3\">\n      <router-outlet></router-outlet>\n    </div>\n    <! --- here is where info for the homepage will be, but we dont really have anything for a homepage. it just looks too bare right now so later ill worry about it --->\n  </div>\n\n\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { ViewPollComponent } from 'src/app/components/view-poll/view-poll.component';\nimport { AddBallotComponent } from 'src/app/components/add-ballot/add-ballot.component';\nimport { LogService } from 'src/app/log.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ViewPollComponent,\n    AddBallotComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [LogService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Poll } from 'src/app/models/poll.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PollService } from 'src/app/services/poll.service';\nimport { LogService } from 'src/app/log.service';\n\n@Component({\n  selector: 'app-view-poll',\n  templateUrl: './view-poll.component.html',\n  styleUrls: ['./view-poll.component.css']\n})\nexport class ViewPollComponent implements OnInit {\n\n  pollData : any;\n  pollCode: string = '';\n\n  constructor(private http: HttpClient, private pollService: PollService, private route: ActivatedRoute, private router: Router, private logger: LogService) {\n  }\n\n  ngOnInit() {\n    //this.pollCode = this.route.snapshot.params.id;\n    //this.getPollData(); //i Think this is supposed to route stuff through the html? im not sure.\n  }\n\n  getPollData(){\n    // this.pollData = this.pollService.get(pollCode) //i am dumb and cant remember how to grab this from the html side\n    // .subscribe( //it doesnt like me using subscribe hmmm\n    //   data => {\n    //     this.pollData = data;\n    //     this.logger.log(data);\n    //   },\n    //   error => {\n    //     this.logger.log(error);\n    //   }); \n    this.logger.log(\"Test\");\n    this.pollData = this.fetchData();\n    this.pollData.urlCode = this.pollCode; //because logging is not working on the springboot side of things...\n    this.pollData.question = this.pollService.get(this.pollCode); //curious to see what this displays as\n\n  }\n\n  fetchData(){\n    this.logger.log(this.pollService.get(this.pollCode));\n    this.logger.log(this.pollCode);\n    return this.pollService.get(this.pollCode);\n\n    // return {\n    //   \"adminCode\" : \"12345678\",\n    //   \"urlCode\" : this.pollCode,\n    //   \"question\" : \"What are the best things to do\",\n    //   \"requireName\" : \"false\",\n    //   \"password\" : \"\",\n    //   \"candidates\" : [\n    //       \"Eat Apple\",\n    //       \"Eat Banana\",\n    //       \"Drink Beer\"\n    //   ],\n    //   \"ballots\" : [] as string[]\n    // }\n  }\n\n}\n\n//alrighty so all i did was make this page fully disappear. wonderful\n//okay cool i fixed that but its not grabbing the url code like i want it to, so i need to figure out why thats not happening\n//YAY! it says the right value! now to like. make it connect through. but at least i Have the Value theyre typing in\n//now to run it w the springboot app\n//okay so its not actually getting anything, which means there is something wrong w my get function for the poll service. time to investigate\n//hm i  had a typo in my  api thing...\n\n","<div>\n    <input type=\"text\" id=\"pollCode\" [(ngModel)]=\"pollCode\">\n    <button (click)=\"getPollData()\" type=\"button\" name=\"button\">Get Poll Data</button>\n  </div>\n  \n  <div *ngIf=\"pollData\">\n    <br/>\n    <span>URL Code:  {{ pollData.urlCode }}</span>\n    <br/>\n    <span>Question:  {{ pollData.question }}</span>\n    <br/>\n    Candidates:\n    <br/>\n    <ul *ngFor=\"let candidate of pollData.candidates; index as i\">\n      <li>Candidate {{i+1}}:  {{candidate}}</li>\n    </ul>\n  </div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddBallotComponent } from 'src/app/components/add-ballot/add-ballot.component';\nimport { ViewPollComponent } from 'src/app/components/view-poll/view-poll.component';\n\nconst routes: Routes = [\n  { path: 'add-ballot', component: AddBallotComponent },\n  { path: 'view-poll', component: ViewPollComponent }\n  //might need a path for homepage but im not worried abt that right now \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}